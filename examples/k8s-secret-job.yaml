# The Role & RoleBinding objects are needed to use kubectl to manage the
# secrets for us.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
 name: k8s-secret-account
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
 name: k8s-secret-account-binding
subjects:
- kind: ServiceAccount
  name: default
roleRef:
 kind: Role
 name: k8s-secret-account
 apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: job
spec:
  backoffLimit: 0
  template:
    spec:
      automountServiceAccountToken: true
      restartPolicy: Never
      containers:
      - name: k8s-secret
        image: registry.kyso.io/docker/mysecureshell:latest
        imagePullPolicy: Always
        env:
        - name: MYSSH_SFTP_UID
          value: '2020'
        - name: MYSSH_SFTP_GID
          value: '2020'
        - name: MYSSH_HOST_KEYS
          value: host_keys.txt
        - name: MYSSH_USER_KEYS
          value: user_keys.txt
        - name: MYSSH_USER_PASS
          value: user_pass.txt
        - name: MYSSH_USER_SIDS
          value: user_sids.tgz
        - name: MYSSH_SECRET_NAME
          value: mysecureshell-secrets
        args: [ 'k8s-init', 'user1', 'user2' ]
        volumeMounts:
        - mountPath: /fileSecrets
          name: mysecureshell-filesecrets
          readOnly: false
      volumes:
      - name: mysecureshell-filesecrets
        emptyDir : {}
